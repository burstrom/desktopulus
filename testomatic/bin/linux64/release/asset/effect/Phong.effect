// phong effect
{
	"name"	: "phong",
		
	"attributeBindings"	: {
		"position"				: "geometry[${geometryId}].position",
		"uv"					: "geometry[${geometryId}].uv",
		"normal"				: "geometry[${geometryId}].normal",
		"tangent"				: "geometry[${geometryId}].tangent",
		"boneIdsA"				: "geometry[${geometryId}].boneIdsA",
		"boneIdsB"				: "geometry[${geometryId}].boneIdsB",		
		"boneWeightsA"			: "geometry[${geometryId}].boneWeightsA",
		"boneWeightsB"			: "geometry[${geometryId}].boneWeightsB"
	},
	
	"uniformBindings"	: {
		"diffuseColor"			: "material[${materialId}].diffuseColor",
		"diffuseMap"			: "material[${materialId}].diffuseMap",
		"alphaMap"				: "material[${materialId}].alphaMap",
		"alphaThreshold"		: "material[${materialId}].alphaThreshold",
		"normalMap"				: "material[${materialId}].normalMap",
		"specularMap"			: "material[${materialId}].specularMap",
		"specularColor"			: { "property" : "material[${materialId}].specularColor", "default" : [ 1.0, 1.0, 1.0, 1.0 ] },
		"environmentMap2d"		: "material[${materialId}].environmentMap2d",
		"environmentMap2dType"	: "material[${materialId}].environmentMap2dType",
		"environmentCubemap"	: "material[${materialId}].environmentCubemap",
		"environmentAlpha"		: "material[${materialId}].environmentAlpha",
		"shininess"				: "material[${materialId}].shininess",
		"modelToWorldMatrix"	: "transform.modelToWorldMatrix",
		"worldToScreenMatrix"	: { "property" : "camera.worldToScreenMatrix", 		"source" : "renderer" },
		"cameraPosition"		: { "property" : "camera.position", 				"source" : "renderer" },
		"boneMatrices"			: "geometry[${geometryId}].boneMatrices",
		"numBones"				: "geometry[${geometryId}].numBones",
		"ambientLights"			: { "property" : "ambientLights",					"source" : "root" },
		"directionalLights"		: { "property" : "directionalLights",				"source" : "root" },
		"spotLights"			: { "property" : "spotLights",						"source" : "root" },
		"pointLights"			: { "property" : "pointLights",						"source" : "root" },
		"fogColor"				: "material[${materialId}].fogColor",
		"fogDensity"			: "material[${materialId}].fogDensity",
		"fogStart"				: "material[${materialId}].fogStart",
		"fogEnd"				: "material[${materialId}].fogEnd"
	},

	"macroBindings"	: {
		"DIFFUSE_MAP"			: "material[${materialId}].diffuseMap",
		"NORMAL_MAP"			: "material[${materialId}].normalMap",
		"SPECULAR_MAP"			: "material[${materialId}].specularMap",
		"ALPHA_MAP"				: "material[${materialId}].alphaMap",
		"ALPHA_THRESHOLD"		: "material[${materialId}].alphaThreshold",
		"ENVIRONMENT_MAP_2D"	: "material[${materialId}].environmentMap2d",
		"ENVIRONMENT_CUBE_MAP"	: "material[${materialId}].environmentCubemap",
		"ENVIRONMENT_ALPHA"		: "material[${materialId}].environmentAlpha",
		"ENVIRONMENT_TYPE_2D"	: "material[${materialId}].environmentMap2dType",
		"SHININESS"				: "material[${materialId}].shininess",
		"MODEL_TO_WORLD"		: "transform.modelToWorldMatrix",
		"NUM_BONES"				: "geometry[${geometryId}].numBones",
		"NUM_AMBIENT_LIGHTS"	: { "property" : "ambientLights.length",		"source" : "root" },
		"PRECOMPUTED_AMBIENT"	: { "property" : "sumAmbients",					"source" : "root" },
		"FOG_LIN"				: "material[${materialId}].fogLinear",
		"FOG_EXP"				: "material[${materialId}].fogExponential",
		"FOG_EXP2"				: "material[${materialId}].fogExponential2"
	},
		
	"stateBindings"	: {
        "blendMode"             : "material[${materialId}].blendMode",
        "colorMask"             : "material[${materialId}].colorMask",
        "depthMask"             : "material[${materialId}].depthMask",
        "depthFunc"             : "material[${materialId}].depthFunc",
        "triangleCulling"       : "material[${materialId}].triangleCulling",
        "stencilFunc"           : "material[${materialId}].stencilFunc",
        "stencilRef"            : "material[${materialId}].stencilRef",
        "stencilMask"           : "material[${materialId}].stencilMask",
        "stencilFailOp"         : "material[${materialId}].stencilFailOp",
        "stencilZFailOp"        : "material[${materialId}].stencilZFailOp",
        "stencilZPassOp"        : "material[${materialId}].stencilZPassOp",
        "scissorBox.x"          : { "property" : "scissorBox.x",        "source" : "renderer" },
        "scissorBox.y"          : { "property" : "scissorBox.y",        "source" : "renderer" },
        "scissorBox.width"      : { "property" : "scissorBox.width",    "source" : "renderer" },
        "scissorBox.height"     : { "property" : "scissorBox.height",   "source" : "renderer" },
        "priority"              : "material[${materialId}].priority",
        "zSort"					: "material[${materialId}].zSort"
	},

	"samplerStates" : {
		"diffuseMap"	: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" },
		"normalMap"		: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" },
		"specularMap"	: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" }
	},
	
    "colorMask"         : true,
    "depthTest"         : [true, "less_equal"],
    "triangleCulling"   : "back",
	"stencilTest"		: ["always", 0, 1, ["keep", "keep", "keep"]],
    "scissorTest"		: false,
	"scissorBox"		: [0, 0, -1, -1],


	"defaultTechnique"	: "opaque",
	
	"techniques" : [
		// SINGLE PASS TECHNIQUES
		//-----------------------
		{
			"name"				: "opaque",
			"fallback" 			: "opaque-multipass",

			"blendMode"			: ["one", "zero"],
   			"priority"          : "opaque",
    		"zSort"             : false,
			
			"macroBindings" : {
				"NUM_DIRECTIONAL_LIGHTS"	: { "property" : "directionalLights.length",	"source" : "root",	"max" : 8 },
				"NUM_POINT_LIGHTS"			: { "property" : "pointLights.length", 			"source" : "root",	"max" : 8 },
				"NUM_SPOT_LIGHTS"			: { "property" : "spotLights.length", 			"source" : "root",	"max" : 8 }
			},
				
			"passes"	: [
			{
				"vertexShader" 		: "#pragma include('Phong.vertex.glsl')",
				"fragmentShader" 	: "#pragma include('Phong.fragment.glsl')"
			}]
		},

		{
			"name"				: "opaque-no-struct",
			"fallback" 			: "opaque-multipass",

			"blendMode"			: ["one", "zero"],
   			"priority"          : "opaque",
    		"zSort"             : false,
			
			"configuration"		: [ "no-glsl-struct" ],
			
			"macroBindings" : {
				"NUM_DIRECTIONAL_LIGHTS"	: { "property" : "directionalLights.length",	"source" : "root",	"max" : 8 },
				"NUM_POINT_LIGHTS"			: { "property" : "pointLights.length", 			"source" : "root",	"max" : 8 },
				"NUM_SPOT_LIGHTS"			: { "property" : "spotLights.length", 			"source" : "root",	"max" : 8 }
			},
				
			"passes"	: [
			{
				"vertexShader" 		: "#pragma include('Phong.vertex.glsl')",
				"fragmentShader" 	: "#pragma include('Phong.fragment.glsl')"
			}]
		},

		{
			"name"				: "transparent",
			"fallback"			: "transparent-multipass",

			"blendMode"			: "alpha",
   			"priority"          : "transparent",
    		"zSort"             : true,
			
			"macroBindings" : {
				"NUM_DIRECTIONAL_LIGHTS"	: { "property" : "directionalLights.length",	"source" : "root",	"max" : 8 },
				"NUM_POINT_LIGHTS"			: { "property" : "pointLights.length", 			"source" : "root",	"max" : 8 },
				"NUM_SPOT_LIGHTS"			: { "property" : "spotLights.length", 			"source" : "root",	"max" : 8 }
			},
				
			"passes"	: [
			{
				"vertexShader"		: "#pragma include('Phong.vertex.glsl')",
				"fragmentShader"	: "#pragma include('Phong.fragment.glsl')"
			}]
		},

		{
			"name"				: "transparent-no-struct",
			"fallback"			: "transparent-multipass",

			"blendMode"			: "alpha",
   			"priority"          : "transparent",
    		"zSort"             : true,
			
			"configuration"		: [ "no-glsl-struct" ],

			"macroBindings" : {
				"NUM_DIRECTIONAL_LIGHTS"	: { "property" : "directionalLights.length",	"source" : "root",	"max" : 8 },
				"NUM_POINT_LIGHTS"			: { "property" : "pointLights.length", 			"source" : "root",	"max" : 8 },
				"NUM_SPOT_LIGHTS"			: { "property" : "spotLights.length", 			"source" : "root",	"max" : 8 }
			},
				
			"passes"	: [
			{
				"vertexShader"		: "#pragma include('Phong.vertex.glsl')",
				"fragmentShader"	: "#pragma include('Phong.fragment.glsl')"
			}]
		},

		// MULTI-PASS TECHNIQUES (coming soon)
		//----------------------
		{
			"name" 					: "opaque-multipass",

			"blendMode"				: ["one", "zero"],
   			"priority"          	: "opaque",
    		"zSort"             	: false,

			"passes" 	: [
			{
				"vertexShader" 		: "#pragma include('Basic.vertex.glsl')",
				"fragmentShader" 	: "#pragma include('Basic.fragment.glsl')"
			}]
		},

		{
			"name" 					: "transparent-multipass",

			"blendMode"				: "alpha",
   			"priority"         		: "transparent",
    		"zSort"             	: true,

			"passes" 	: [
			{
				"vertexShader" 		: "#pragma include('Basic.vertex.glsl')",
				"fragmentShader" 	: "#pragma include('Basic.fragment.glsl')"
			}]
		}
	]
}
