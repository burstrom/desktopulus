{
	"name"				: "normal",

	"attributeBindings"	: {
		"position"				: "geometry[${geometryId}].position",
		"normal"				: "geometry[${geometryId}].normal",
		"boneIdsA"				: "geometry[${geometryId}].boneIdsA",
		"boneIdsB"				: "geometry[${geometryId}].boneIdsB",		
		"boneWeightsA"			: "geometry[${geometryId}].boneWeightsA",
		"boneWeightsB"			: "geometry[${geometryId}].boneWeightsB"
	},

	"uniformBindings"	: {
        "modelToWorldMatrix"    : "transform.modelToWorldMatrix",
        "worldToScreenMatrix"   : { "property" : "camera.worldToScreenMatrix", "source" : "renderer" },
		"boneMatrices"			: "geometry[${geometryId}].boneMatrices",
		"numBones"				: "geometry[${geometryId}].numBones"
	},

	"macroBindings"	: {
		"MODEL_TO_WORLD"		: "transform.modelToWorldMatrix",
		"NUM_BONES"				: "geometry[${geometryId}].numBones"
	},
		
	"stateBindings" : {
        "blendMode"             : "material[${materialId}].blendMode",
        "colorMask"             : "material[${materialId}].colorMask",
        "depthMask"             : "material[${materialId}].depthMask",
        "depthFunc"             : "material[${materialId}].depthFunc",
        "triangleCulling"       : "material[${materialId}].triangleCulling",
        "stencilFunc"           : "material[${materialId}].stencilFunc",
        "stencilRef"            : "material[${materialId}].stencilRef",
        "stencilMask"           : "material[${materialId}].stencilMask",
        "stencilFailOp"         : "material[${materialId}].stencilFailOp",
        "stencilZFailOp"        : "material[${materialId}].stencilZFailOp",
        "stencilZPassOp"        : "material[${materialId}].stencilZPassOp",
        "scissorBox.x"          : { "property" : "scissorBox.x",        "source" : "renderer" },
        "scissorBox.y"          : { "property" : "scissorBox.y",        "source" : "renderer" },
        "scissorBox.width"      : { "property" : "scissorBox.width",    "source" : "renderer" },
        "scissorBox.height"     : { "property" : "scissorBox.height",   "source" : "renderer" },
        "priority"              : "material[${materialId}].priority",
        "zSort"					: "material[${materialId}].zSort"
    },

    "blendMode"         : ["one", "zero"],
    "colorMask"         : true,
    "depthTest"         : [true, "less_equal"],
    "triangleCulling"   : "none",
	"stencilTest"		: ["always", 0, 1, ["keep", "keep", "keep"]],
    "scissorTest"		: false,
	"scissorBox"		: [0, 0, -1, -1],
    "priority"          : "opaque",
    "zSort"             : false,
	
	"passes"	: [{
		"vertexShader"	: "
			uniform mat4 modelToWorldMatrix;
			uniform mat4 worldToScreenMatrix;

			attribute vec3 position;
			attribute vec3 normal;

			varying vec3 worldNormal;

			#pragma include('Skinning.function.glsl')

			void main(void)
			{
				vec4 pos    = vec4(position, 1.0);
				vec4 n 		= vec4(normal, 0.0); 

				
				#ifdef NUM_BONES
					pos 	= skinning_moveVertex(pos);
					n 		= skinning_moveVertex(n);
				#endif // NUM_BONES
				
				worldNormal	= n.xyz;

				#ifdef MODEL_TO_WORLD
					pos 		= modelToWorldMatrix * pos;
					worldNormal	= mat3(modelToWorldMatrix) * worldNormal;
				#endif // MODEL_TO_WORLD

				gl_Position =  worldToScreenMatrix * pos;
			}
		",
		"fragmentShader"	: "
			varying vec3 worldNormal;

			void main(void)
			{
				gl_FragColor = vec4((normalize(worldNormal.xyz) + 1) * .5, 1);
			}
		"
	}]
}
